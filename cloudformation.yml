AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template to create a Rancher environment
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  RancherInstanceType:
    Description: The Rancher server instance type
    Type: String
    Default: t2.medium
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  RancherInstanceVolumeSize:
    Description: The size of the volume (GB)
    Type: Number
    Default: '16'
    MinValue: '1'
    MaxValue: '1024'
    ConstraintDescription: must be between 1 and 1024 GB.
  RancherPort:
    Description: The Rancher server port
    Type: String
    Default: '8080'
    AllowedPattern: '^[1-9][0-9]{2,4}$'
    ConstraintDescription: must be a valid port number.
  RancherVersion:
    Description: The Rancher server version
    Type: String
    Default: v1.6.25
    AllowedPattern: '^v[0-9]+\.[0-9]+\.[0-9]+$'
    ConstraintDescription: must be a valid port number.
  DatabaseAdminPassword:
    Description: The database admin account password
    Type: String
    NoEcho: 'true'
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DatabaseAdminUser:
    Description: The database admin account username
    Type: String
    Default: admin
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DatabaseAllocatedStorage:
    Description: The size of the database (GB)
    Type: Number
    Default: '50'
    MinValue: '5'
    MaxValue: '1024'
    ConstraintDescription: must be between 5 and 1024 GB.
  DatabaseName:
    Description: The name of the database
    Type: String
    Default: rancher
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-z\-]*'
    ConstraintDescription: must contain only lowercase characters.
  DatabaseInstanceClass:
    Description: The database instance class
    Type: String
    Default: db.t2.small
    AllowedValues:
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
    ConstraintDescription: must select a valid database instance type.
  BucketName:
    Description: The name of the bucket
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[0-9a-z\-]*'
    ConstraintDescription: 'must contain only lowercase characters, digits and minus signs.'
  FileSystemThroughput:
    Description: The throughput of the file system
    Type: Number
    Default: '15'
    MinValue: '1'
    MaxValue: '1024'
    ConstraintDescription: must be between 1 and 1024 MiB/s.
Mappings:
  AWSRegion2AMI:
    eu-north-1:
      AMI: ami-02c60b1d15cfdb395
    ap-south-1:
      AMI: ami-03c6826f71f10a89d
    eu-west-3:
      AMI: ami-08f81096c8ca76b8c
    eu-west-2:
      AMI: ami-0a9b760b7f5743662
    eu-west-1:
      AMI: ami-0985b29f1ceb02183
    ap-northeast-2:
      AMI: ami-05a24d2c2ae2ff01c
    ap-northeast-1:
      AMI: ami-0faebbe4fa02127b9
    sa-east-1:
      AMI: ami-01872ab8569bde461
    ca-central-1:
      AMI: ami-00b399e6eafdbe50b
    ap-southeast-1:
      AMI: ami-0b8a7192b0dc07709
    ap-southeast-2:
      AMI: ami-058f3d6c035b8d6d1
    eu-central-1:
      AMI: ami-0b31348605bf75c44
    us-east-1:
      AMI: ami-085b489bb4756f126
    us-east-2:
      AMI: ami-002ab867b8b8591d5
    us-west-1:
      AMI: ami-0f3cd370f66d772c4
    us-west-2:
      AMI: ami-04a8b7119cc82a3b2
    cn-north-1:
      AMI: ami-0048342c054fb5a3e
    cn-northwest-1:
      AMI: ami-0b0f6c8524c8ec27c
Resources:
  RancherInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      UserData:
        'Fn::Base64': !Sub |
          #cloud-config
          rancher:
          write_files:
          - path: /etc/rc.local
            permissions: "0755"
            owner: root
            content: |
              #!/bin/bash
              wait-for-docker
              docker run -d -p ${RancherPort}:8080 --name rancher-server --restart=unless-stopped rancher/server:${RancherVersion} --db-pass ${DatabaseAdminPassword} --db-user ${DatabaseAdminUser} --db-name ${DatabaseName} --db-port ${DatabaseMasterInstance.Endpoint.Port} --db-host ${DatabaseMasterInstance.Endpoint.Address}
      InstanceType: !Ref RancherInstanceType
      SecurityGroups:
        - !Ref RancherSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AWSRegion2AMI
        - !Ref 'AWS::Region'
        - AMI
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-rancher-server'
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeType: gp2
            VolumeSize: !Ref RancherInstanceVolumeSize
            DeleteOnTermination: true
  RancherSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Rancher
      Tags:
        - Key: Name
          Value: Rancher
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '2376'
          ToPort: '2376'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '500'
          ToPort: '500'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '4500'
          ToPort: '4500'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: !Ref RancherPort
          ToPort: !Ref RancherPort
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '2049'
          ToPort: '2049'
          CidrIp: 0.0.0.0/0
  IPAddress:
    Type: 'AWS::EC2::EIP'
    Properties:
      Tags:
        - Key: Name
          Value: Rancher
  IPAssoc:
    Type: 'AWS::EC2::EIPAssociation'
    Properties:
      InstanceId: !Ref RancherInstance
      EIP: !Ref IPAddress
  DatabaseSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Database
      Tags:
        - Key: Name
          Value: Database
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
  DatabaseMasterInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      MultiAZ: true
      Engine: MySQL
      EngineVersion: 5.7
      StorageEncrypted: true
      StorageType: gp2
      DBName: !Ref DatabaseName
      MasterUsername: !Ref DatabaseAdminUser
      MasterUserPassword: !Ref DatabaseAdminPassword
      AllocatedStorage: !Ref DatabaseAllocatedStorage
      DBInstanceClass: !Ref DatabaseInstanceClass
      DBInstanceIdentifier: !Ref 'AWS::StackName'
      VPCSecurityGroups:
        - !GetAtt
          - DatabaseSecurityGroup
          - GroupId
    DeletionPolicy: Snapshot
  Bucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref BucketName
  BucketGroup:
    Type: 'AWS::IAM::Group'
  BucketPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub 'AmazonS3FullAccess-${BucketName}'
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:ListAllMyBuckets'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:ListBuckets'
            Resource: !Sub 'arn:aws:s3:::${BucketName}'
          - Effect: Allow
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${BucketName}/*'
      Groups:
        - !Ref BucketGroup
  BucketUser:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Sub '${AWS::StackName}-bucket'
      Groups:
        - !Ref BucketGroup
  BucketKey:
    Type: 'AWS::IAM::AccessKey'
    Properties:
      UserName: !Ref BucketUser
  FileSystem:
    Type: 'AWS::EFS::FileSystem'
    DeletionPolicy: Retain
    Properties:
      Encrypted: true
      FileSystemTags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
      PerformanceMode: generalPurpose
      ProvisionedThroughputInMibps: !Ref FileSystemThroughput
      ThroughputMode: provisioned
Outputs:
  RancherURL:
    Description: URL of the Rancher server
    Value: !Sub 'http://${RancherInstance.PublicDnsName}:${RancherPort}'
  RancherIP:
    Description: Public IP of the Rancher server
    Value: !Ref IPAddress
  S3BucketURL:
    Description: URL of the S3 bucket
    Value: !Sub 'https://${Bucket.DomainName}'
  S3BucketAccessKey:
    Description: Access key of the S3 bucket user
    Value: !Ref BucketKey
  S3BucketSecretKey:
    Description: Secret key of the S3 bucket user
    Value: !GetAtt
      - BucketKey
      - SecretAccessKey
  NFSDomain:
    Description: Domain name of the NFS file system
    Value: !Sub '${FileSystem}.efs.${AWS::Region}.${AWS::URLSuffix}'
  DBConnectionString:
    Description: Database connection string for the master database
    Value: !Sub 'mysql://${DatabaseMasterInstance.Endpoint.Address}:${DatabaseMasterInstance.Endpoint.Port}/${DatabaseName}'